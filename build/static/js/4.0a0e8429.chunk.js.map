{"version":3,"sources":["Components/User/UserStatsGraphs.module.css","Components/User/UserStatsGraphs.js"],"names":["module","exports","UserStatsGraphs","data","React","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","item","x","title","y","Number","acessos","reduce","a","b","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,MAAQ,iC,gHC8CjGC,UA3CS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,IAAMC,SAAS,GAAzC,mBAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAL,IAAMM,WAAU,WACd,IAAMC,EAAYR,EAAKS,KAAI,SAAAC,GACzB,MAAO,CACLC,EAAGD,EAAKE,MACRC,EAAGC,OAAOJ,EAAKK,aAGnBT,EACEN,EAAKS,KAAI,gBAAGM,EAAH,EAAGA,QAAH,OAAiBD,OAAOC,MAAUC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MAClEd,EAASI,KACR,CAACR,IAGF,6BAASmB,UAAS,UAAKC,IAAOjB,MAAZ,eAChB,yBAAKgB,UAAS,UAAKC,IAAOf,MAAZ,YAAqBe,IAAOC,YACxC,uCAAahB,IAEf,yBAAKc,UAAWC,IAAOC,WACrB,kBAAC,IAAD,CAAYrB,KAAMG,EAAOmB,YAAa,GAAIC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IAAMC,MAAO,CACtG5B,KAAM,CACJ6B,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEfC,OAAQ,CACNC,SAAU,GACVC,KAAM,YAIZ,yBAAKf,UAAWC,IAAOC,WACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYc,UAAU,QAAQnC,KAAMG","file":"static/js/4.0a0e8429.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UserStatsGraphs_graph__u2p9_\",\"graphItem\":\"UserStatsGraphs_graphItem__35V1G\",\"total\":\"UserStatsGraphs_total__2KH8R\"};","import React from 'react'\nimport styles from './UserStatsGraphs.module.css';\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\n\nconst UserStatsGraphs = ({ data }) => {\n  const [graph, setGraph] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n\n  React.useEffect(() => {\n    const graphData = data.map(item => {\n      return {\n        x: item.title,\n        y: Number(item.acessos)\n      }\n    })\n    setTotal(\n      data.map(({ acessos }) => Number(acessos)).reduce((a, b) => a + b));\n    setGraph(graphData)\n  }, [data])\n\n  return (\n    <section className={`${styles.graph} animeLeft`}>\n      <div className={`${styles.total} ${styles.graphItem}`} >\n        <p>Acessos: {total}</p>\n      </div>\n      <div className={styles.graphItem}>\n        <VictoryPie data={graph} innerRadius={50} padding={{ top: 20, bottom: 20, left: 80, right: 80 }} style={{\n          data: {\n            fillOpacity: 0.9,\n            stroke: \"#fff\",\n            strokeWidth: 2\n          },\n          labels: {\n            fontSize: 14,\n            fill: \"#333\"\n          }\n        }} />\n      </div>\n      <div className={styles.graphItem}>\n        <VictoryChart>\n          <VictoryBar alignment='start' data={graph} ></VictoryBar>\n        </VictoryChart>\n      </div>\n    </section>\n  )\n}\n\nexport default UserStatsGraphs\n"],"sourceRoot":""}